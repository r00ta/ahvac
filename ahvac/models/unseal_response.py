# coding: utf-8

"""
    HashiCorp Vault API

    HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

    The version of the OpenAPI document: 1.15.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class UnsealResponse(BaseModel):
    """
    UnsealResponse
    """ # noqa: E501
    build_date: Optional[StrictStr] = None
    cluster_id: Optional[StrictStr] = None
    cluster_name: Optional[StrictStr] = None
    hcp_link_resource_id: Optional[StrictStr] = Field(default=None, alias="hcp_link_resource_ID")
    hcp_link_status: Optional[StrictStr] = None
    initialized: Optional[StrictBool] = None
    migration: Optional[StrictBool] = None
    n: Optional[StrictInt] = None
    nonce: Optional[StrictStr] = None
    progress: Optional[StrictInt] = None
    recovery_seal: Optional[StrictBool] = None
    sealed: Optional[StrictBool] = None
    storage_type: Optional[StrictStr] = None
    t: Optional[StrictInt] = None
    type: Optional[StrictStr] = None
    version: Optional[StrictStr] = None
    __properties: ClassVar[List[str]] = ["build_date", "cluster_id", "cluster_name", "hcp_link_resource_ID", "hcp_link_status", "initialized", "migration", "n", "nonce", "progress", "recovery_seal", "sealed", "storage_type", "t", "type", "version"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of UnsealResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of UnsealResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "build_date": obj.get("build_date"),
            "cluster_id": obj.get("cluster_id"),
            "cluster_name": obj.get("cluster_name"),
            "hcp_link_resource_ID": obj.get("hcp_link_resource_ID"),
            "hcp_link_status": obj.get("hcp_link_status"),
            "initialized": obj.get("initialized"),
            "migration": obj.get("migration"),
            "n": obj.get("n"),
            "nonce": obj.get("nonce"),
            "progress": obj.get("progress"),
            "recovery_seal": obj.get("recovery_seal"),
            "sealed": obj.get("sealed"),
            "storage_type": obj.get("storage_type"),
            "t": obj.get("t"),
            "type": obj.get("type"),
            "version": obj.get("version")
        })
        return _obj


