# coding: utf-8

"""
    HashiCorp Vault API

    HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

    The version of the OpenAPI document: 1.15.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ahvac.models.kubernetes_write_role_request import KubernetesWriteRoleRequest

class TestKubernetesWriteRoleRequest(unittest.TestCase):
    """KubernetesWriteRoleRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> KubernetesWriteRoleRequest:
        """Test KubernetesWriteRoleRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `KubernetesWriteRoleRequest`
        """
        model = KubernetesWriteRoleRequest()
        if include_optional:
            return KubernetesWriteRoleRequest(
                allowed_kubernetes_namespace_selector = '',
                allowed_kubernetes_namespaces = [
                    ''
                    ],
                extra_annotations = None,
                extra_labels = None,
                generated_role_rules = '',
                kubernetes_role_name = '',
                kubernetes_role_type = 'Role',
                name_template = '',
                service_account_name = '',
                token_default_audiences = [
                    ''
                    ],
                token_default_ttl = '',
                token_max_ttl = ''
            )
        else:
            return KubernetesWriteRoleRequest(
        )
        """

    def testKubernetesWriteRoleRequest(self):
        """Test KubernetesWriteRoleRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
