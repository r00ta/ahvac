# coding: utf-8

"""
    HashiCorp Vault API

    HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

    The version of the OpenAPI document: 1.15.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ahvac.models.cloud_foundry_configure_request import CloudFoundryConfigureRequest

class TestCloudFoundryConfigureRequest(unittest.TestCase):
    """CloudFoundryConfigureRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CloudFoundryConfigureRequest:
        """Test CloudFoundryConfigureRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CloudFoundryConfigureRequest`
        """
        model = CloudFoundryConfigureRequest()
        if include_optional:
            return CloudFoundryConfigureRequest(
                cf_api_addr = '',
                cf_api_mutual_tls_certificate = '',
                cf_api_mutual_tls_key = '',
                cf_api_trusted_certificates = [
                    ''
                    ],
                cf_client_id = '',
                cf_client_secret = '',
                cf_password = '',
                cf_username = '',
                identity_ca_certificates = [
                    ''
                    ],
                login_max_seconds_not_after = 56,
                login_max_seconds_not_before = '300',
                pcf_api_addr = '',
                pcf_api_trusted_certificates = [
                    ''
                    ],
                pcf_password = '',
                pcf_username = ''
            )
        else:
            return CloudFoundryConfigureRequest(
        )
        """

    def testCloudFoundryConfigureRequest(self):
        """Test CloudFoundryConfigureRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
