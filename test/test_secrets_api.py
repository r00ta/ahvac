# coding: utf-8

"""
    HashiCorp Vault API

    HTTP API that gives you full access to Vault. All API routes are prefixed with `/v1/`.

    The version of the OpenAPI document: 1.15.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from ahvac.api.secrets_api import SecretsApi


class TestSecretsApi(unittest.TestCase):
    """SecretsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SecretsApi()

    def tearDown(self) -> None:
        pass

    def test_ali_cloud_configure(self) -> None:
        """Test case for ali_cloud_configure

        """
        pass

    def test_ali_cloud_delete_configuration(self) -> None:
        """Test case for ali_cloud_delete_configuration

        """
        pass

    def test_ali_cloud_delete_role(self) -> None:
        """Test case for ali_cloud_delete_role

        Read, write and reference policies and roles that API keys or STS credentials can be made for.
        """
        pass

    def test_ali_cloud_generate_credentials(self) -> None:
        """Test case for ali_cloud_generate_credentials

        Generate an API key or STS credential using the given role's configuration.'
        """
        pass

    def test_ali_cloud_list_roles(self) -> None:
        """Test case for ali_cloud_list_roles

        List the existing roles in this backend.
        """
        pass

    def test_ali_cloud_read_configuration(self) -> None:
        """Test case for ali_cloud_read_configuration

        """
        pass

    def test_ali_cloud_read_role(self) -> None:
        """Test case for ali_cloud_read_role

        Read, write and reference policies and roles that API keys or STS credentials can be made for.
        """
        pass

    def test_ali_cloud_write_role(self) -> None:
        """Test case for ali_cloud_write_role

        Read, write and reference policies and roles that API keys or STS credentials can be made for.
        """
        pass

    def test_aws_configure_lease(self) -> None:
        """Test case for aws_configure_lease

        """
        pass

    def test_aws_configure_root_iam_credentials(self) -> None:
        """Test case for aws_configure_root_iam_credentials

        """
        pass

    def test_aws_delete_role(self) -> None:
        """Test case for aws_delete_role

        Read, write and reference IAM policies that access keys can be made for.
        """
        pass

    def test_aws_delete_static_roles_name(self) -> None:
        """Test case for aws_delete_static_roles_name

        """
        pass

    def test_aws_generate_credentials(self) -> None:
        """Test case for aws_generate_credentials

        """
        pass

    def test_aws_generate_credentials_with_parameters(self) -> None:
        """Test case for aws_generate_credentials_with_parameters

        """
        pass

    def test_aws_generate_sts_credentials(self) -> None:
        """Test case for aws_generate_sts_credentials

        """
        pass

    def test_aws_generate_sts_credentials_with_parameters(self) -> None:
        """Test case for aws_generate_sts_credentials_with_parameters

        """
        pass

    def test_aws_list_roles(self) -> None:
        """Test case for aws_list_roles

        List the existing roles in this backend
        """
        pass

    def test_aws_read_lease_configuration(self) -> None:
        """Test case for aws_read_lease_configuration

        """
        pass

    def test_aws_read_role(self) -> None:
        """Test case for aws_read_role

        Read, write and reference IAM policies that access keys can be made for.
        """
        pass

    def test_aws_read_root_iam_credentials_configuration(self) -> None:
        """Test case for aws_read_root_iam_credentials_configuration

        """
        pass

    def test_aws_read_static_creds_name(self) -> None:
        """Test case for aws_read_static_creds_name

        """
        pass

    def test_aws_read_static_roles_name(self) -> None:
        """Test case for aws_read_static_roles_name

        """
        pass

    def test_aws_rotate_root_iam_credentials(self) -> None:
        """Test case for aws_rotate_root_iam_credentials

        """
        pass

    def test_aws_write_role(self) -> None:
        """Test case for aws_write_role

        Read, write and reference IAM policies that access keys can be made for.
        """
        pass

    def test_aws_write_static_roles_name(self) -> None:
        """Test case for aws_write_static_roles_name

        """
        pass

    def test_azure_configure(self) -> None:
        """Test case for azure_configure

        """
        pass

    def test_azure_delete_configuration(self) -> None:
        """Test case for azure_delete_configuration

        """
        pass

    def test_azure_delete_role(self) -> None:
        """Test case for azure_delete_role

        Manage the Vault roles used to generate Azure credentials.
        """
        pass

    def test_azure_list_roles(self) -> None:
        """Test case for azure_list_roles

        List existing roles.
        """
        pass

    def test_azure_read_configuration(self) -> None:
        """Test case for azure_read_configuration

        """
        pass

    def test_azure_read_role(self) -> None:
        """Test case for azure_read_role

        Manage the Vault roles used to generate Azure credentials.
        """
        pass

    def test_azure_request_service_principal_credentials(self) -> None:
        """Test case for azure_request_service_principal_credentials

        """
        pass

    def test_azure_rotate_root(self) -> None:
        """Test case for azure_rotate_root

        """
        pass

    def test_azure_write_role(self) -> None:
        """Test case for azure_write_role

        Manage the Vault roles used to generate Azure credentials.
        """
        pass

    def test_consul_configure_access(self) -> None:
        """Test case for consul_configure_access

        """
        pass

    def test_consul_delete_role(self) -> None:
        """Test case for consul_delete_role

        """
        pass

    def test_consul_generate_credentials(self) -> None:
        """Test case for consul_generate_credentials

        """
        pass

    def test_consul_list_roles(self) -> None:
        """Test case for consul_list_roles

        """
        pass

    def test_consul_read_access_configuration(self) -> None:
        """Test case for consul_read_access_configuration

        """
        pass

    def test_consul_read_role(self) -> None:
        """Test case for consul_read_role

        """
        pass

    def test_consul_write_role(self) -> None:
        """Test case for consul_write_role

        """
        pass

    def test_cubbyhole_delete(self) -> None:
        """Test case for cubbyhole_delete

        Deletes the secret at the specified location.
        """
        pass

    def test_cubbyhole_list(self) -> None:
        """Test case for cubbyhole_list

        List secret entries at the specified location.
        """
        pass

    def test_cubbyhole_read(self) -> None:
        """Test case for cubbyhole_read

        Retrieve the secret at the specified location.
        """
        pass

    def test_cubbyhole_write(self) -> None:
        """Test case for cubbyhole_write

        Store a secret at the specified location.
        """
        pass

    def test_database_configure_connection(self) -> None:
        """Test case for database_configure_connection

        """
        pass

    def test_database_delete_connection_configuration(self) -> None:
        """Test case for database_delete_connection_configuration

        """
        pass

    def test_database_delete_role(self) -> None:
        """Test case for database_delete_role

        Manage the roles that can be created with this backend.
        """
        pass

    def test_database_delete_static_role(self) -> None:
        """Test case for database_delete_static_role

        Manage the static roles that can be created with this backend.
        """
        pass

    def test_database_generate_credentials(self) -> None:
        """Test case for database_generate_credentials

        Request database credentials for a certain role.
        """
        pass

    def test_database_list_connections(self) -> None:
        """Test case for database_list_connections

        Configure connection details to a database plugin.
        """
        pass

    def test_database_list_roles(self) -> None:
        """Test case for database_list_roles

        Manage the roles that can be created with this backend.
        """
        pass

    def test_database_list_static_roles(self) -> None:
        """Test case for database_list_static_roles

        Manage the static roles that can be created with this backend.
        """
        pass

    def test_database_read_connection_configuration(self) -> None:
        """Test case for database_read_connection_configuration

        """
        pass

    def test_database_read_role(self) -> None:
        """Test case for database_read_role

        Manage the roles that can be created with this backend.
        """
        pass

    def test_database_read_static_role(self) -> None:
        """Test case for database_read_static_role

        Manage the static roles that can be created with this backend.
        """
        pass

    def test_database_read_static_role_credentials(self) -> None:
        """Test case for database_read_static_role_credentials

        Request database credentials for a certain static role. These credentials are rotated periodically.
        """
        pass

    def test_database_reset_connection(self) -> None:
        """Test case for database_reset_connection

        Resets a database plugin.
        """
        pass

    def test_database_rotate_root_credentials(self) -> None:
        """Test case for database_rotate_root_credentials

        """
        pass

    def test_database_rotate_static_role_credentials(self) -> None:
        """Test case for database_rotate_static_role_credentials

        """
        pass

    def test_database_write_role(self) -> None:
        """Test case for database_write_role

        Manage the roles that can be created with this backend.
        """
        pass

    def test_database_write_static_role(self) -> None:
        """Test case for database_write_static_role

        Manage the static roles that can be created with this backend.
        """
        pass

    def test_google_cloud_configure(self) -> None:
        """Test case for google_cloud_configure

        """
        pass

    def test_google_cloud_delete_impersonated_account(self) -> None:
        """Test case for google_cloud_delete_impersonated_account

        """
        pass

    def test_google_cloud_delete_roleset(self) -> None:
        """Test case for google_cloud_delete_roleset

        """
        pass

    def test_google_cloud_delete_static_account(self) -> None:
        """Test case for google_cloud_delete_static_account

        """
        pass

    def test_google_cloud_generate_impersonated_account_access_token(self) -> None:
        """Test case for google_cloud_generate_impersonated_account_access_token

        """
        pass

    def test_google_cloud_generate_impersonated_account_access_token2(self) -> None:
        """Test case for google_cloud_generate_impersonated_account_access_token2

        """
        pass

    def test_google_cloud_generate_roleset_access_token(self) -> None:
        """Test case for google_cloud_generate_roleset_access_token

        """
        pass

    def test_google_cloud_generate_roleset_access_token2(self) -> None:
        """Test case for google_cloud_generate_roleset_access_token2

        """
        pass

    def test_google_cloud_generate_roleset_access_token3(self) -> None:
        """Test case for google_cloud_generate_roleset_access_token3

        """
        pass

    def test_google_cloud_generate_roleset_access_token4(self) -> None:
        """Test case for google_cloud_generate_roleset_access_token4

        """
        pass

    def test_google_cloud_generate_roleset_key(self) -> None:
        """Test case for google_cloud_generate_roleset_key

        """
        pass

    def test_google_cloud_generate_roleset_key2(self) -> None:
        """Test case for google_cloud_generate_roleset_key2

        """
        pass

    def test_google_cloud_generate_roleset_key3(self) -> None:
        """Test case for google_cloud_generate_roleset_key3

        """
        pass

    def test_google_cloud_generate_roleset_key4(self) -> None:
        """Test case for google_cloud_generate_roleset_key4

        """
        pass

    def test_google_cloud_generate_static_account_access_token(self) -> None:
        """Test case for google_cloud_generate_static_account_access_token

        """
        pass

    def test_google_cloud_generate_static_account_access_token2(self) -> None:
        """Test case for google_cloud_generate_static_account_access_token2

        """
        pass

    def test_google_cloud_generate_static_account_key(self) -> None:
        """Test case for google_cloud_generate_static_account_key

        """
        pass

    def test_google_cloud_generate_static_account_key2(self) -> None:
        """Test case for google_cloud_generate_static_account_key2

        """
        pass

    def test_google_cloud_kms_configure(self) -> None:
        """Test case for google_cloud_kms_configure

        """
        pass

    def test_google_cloud_kms_configure_key(self) -> None:
        """Test case for google_cloud_kms_configure_key

        """
        pass

    def test_google_cloud_kms_decrypt(self) -> None:
        """Test case for google_cloud_kms_decrypt

        Decrypt a ciphertext value using a named key
        """
        pass

    def test_google_cloud_kms_delete_configuration(self) -> None:
        """Test case for google_cloud_kms_delete_configuration

        """
        pass

    def test_google_cloud_kms_delete_key(self) -> None:
        """Test case for google_cloud_kms_delete_key

        Interact with crypto keys in Vault and Google Cloud KMS
        """
        pass

    def test_google_cloud_kms_deregister_key(self) -> None:
        """Test case for google_cloud_kms_deregister_key

        """
        pass

    def test_google_cloud_kms_deregister_key2(self) -> None:
        """Test case for google_cloud_kms_deregister_key2

        """
        pass

    def test_google_cloud_kms_encrypt(self) -> None:
        """Test case for google_cloud_kms_encrypt

        Encrypt a plaintext value using a named key
        """
        pass

    def test_google_cloud_kms_list_keys(self) -> None:
        """Test case for google_cloud_kms_list_keys

        List named keys
        """
        pass

    def test_google_cloud_kms_read_configuration(self) -> None:
        """Test case for google_cloud_kms_read_configuration

        """
        pass

    def test_google_cloud_kms_read_key(self) -> None:
        """Test case for google_cloud_kms_read_key

        Interact with crypto keys in Vault and Google Cloud KMS
        """
        pass

    def test_google_cloud_kms_read_key_configuration(self) -> None:
        """Test case for google_cloud_kms_read_key_configuration

        """
        pass

    def test_google_cloud_kms_reencrypt(self) -> None:
        """Test case for google_cloud_kms_reencrypt

        Re-encrypt existing ciphertext data to a new version
        """
        pass

    def test_google_cloud_kms_register_key(self) -> None:
        """Test case for google_cloud_kms_register_key

        Register an existing crypto key in Google Cloud KMS
        """
        pass

    def test_google_cloud_kms_retrieve_public_key(self) -> None:
        """Test case for google_cloud_kms_retrieve_public_key

        Retrieve the public key associated with the named key
        """
        pass

    def test_google_cloud_kms_rotate_key(self) -> None:
        """Test case for google_cloud_kms_rotate_key

        Rotate a crypto key to a new primary version
        """
        pass

    def test_google_cloud_kms_sign(self) -> None:
        """Test case for google_cloud_kms_sign

        Signs a message or digest using a named key
        """
        pass

    def test_google_cloud_kms_trim_key_versions(self) -> None:
        """Test case for google_cloud_kms_trim_key_versions

        """
        pass

    def test_google_cloud_kms_trim_key_versions2(self) -> None:
        """Test case for google_cloud_kms_trim_key_versions2

        """
        pass

    def test_google_cloud_kms_verify(self) -> None:
        """Test case for google_cloud_kms_verify

        Verify a signature using a named key
        """
        pass

    def test_google_cloud_kms_write_key(self) -> None:
        """Test case for google_cloud_kms_write_key

        Interact with crypto keys in Vault and Google Cloud KMS
        """
        pass

    def test_google_cloud_list_impersonated_accounts(self) -> None:
        """Test case for google_cloud_list_impersonated_accounts

        """
        pass

    def test_google_cloud_list_impersonated_accounts2(self) -> None:
        """Test case for google_cloud_list_impersonated_accounts2

        """
        pass

    def test_google_cloud_list_rolesets(self) -> None:
        """Test case for google_cloud_list_rolesets

        """
        pass

    def test_google_cloud_list_rolesets2(self) -> None:
        """Test case for google_cloud_list_rolesets2

        """
        pass

    def test_google_cloud_list_static_accounts(self) -> None:
        """Test case for google_cloud_list_static_accounts

        """
        pass

    def test_google_cloud_list_static_accounts2(self) -> None:
        """Test case for google_cloud_list_static_accounts2

        """
        pass

    def test_google_cloud_read_configuration(self) -> None:
        """Test case for google_cloud_read_configuration

        """
        pass

    def test_google_cloud_read_impersonated_account(self) -> None:
        """Test case for google_cloud_read_impersonated_account

        """
        pass

    def test_google_cloud_read_roleset(self) -> None:
        """Test case for google_cloud_read_roleset

        """
        pass

    def test_google_cloud_read_static_account(self) -> None:
        """Test case for google_cloud_read_static_account

        """
        pass

    def test_google_cloud_rotate_roleset(self) -> None:
        """Test case for google_cloud_rotate_roleset

        """
        pass

    def test_google_cloud_rotate_roleset_key(self) -> None:
        """Test case for google_cloud_rotate_roleset_key

        """
        pass

    def test_google_cloud_rotate_root_credentials(self) -> None:
        """Test case for google_cloud_rotate_root_credentials

        """
        pass

    def test_google_cloud_rotate_static_account_key(self) -> None:
        """Test case for google_cloud_rotate_static_account_key

        """
        pass

    def test_google_cloud_write_impersonated_account(self) -> None:
        """Test case for google_cloud_write_impersonated_account

        """
        pass

    def test_google_cloud_write_roleset(self) -> None:
        """Test case for google_cloud_write_roleset

        """
        pass

    def test_google_cloud_write_static_account(self) -> None:
        """Test case for google_cloud_write_static_account

        """
        pass

    def test_kubernetes_check_configuration(self) -> None:
        """Test case for kubernetes_check_configuration

        """
        pass

    def test_kubernetes_configure(self) -> None:
        """Test case for kubernetes_configure

        """
        pass

    def test_kubernetes_delete_configuration(self) -> None:
        """Test case for kubernetes_delete_configuration

        """
        pass

    def test_kubernetes_delete_role(self) -> None:
        """Test case for kubernetes_delete_role

        """
        pass

    def test_kubernetes_generate_credentials(self) -> None:
        """Test case for kubernetes_generate_credentials

        """
        pass

    def test_kubernetes_list_roles(self) -> None:
        """Test case for kubernetes_list_roles

        """
        pass

    def test_kubernetes_read_configuration(self) -> None:
        """Test case for kubernetes_read_configuration

        """
        pass

    def test_kubernetes_read_role(self) -> None:
        """Test case for kubernetes_read_role

        """
        pass

    def test_kubernetes_write_role(self) -> None:
        """Test case for kubernetes_write_role

        """
        pass

    def test_kv_v1_delete(self) -> None:
        """Test case for kv_v1_delete

        """
        pass

    def test_kv_v1_list(self) -> None:
        """Test case for kv_v1_list

        """
        pass

    def test_kv_v1_read(self) -> None:
        """Test case for kv_v1_read

        """
        pass

    def test_kv_v1_write(self) -> None:
        """Test case for kv_v1_write

        """
        pass

    def test_kv_v2_configure(self) -> None:
        """Test case for kv_v2_configure

        Configure backend level settings that are applied to every key in the key-value store.
        """
        pass

    def test_kv_v2_delete(self) -> None:
        """Test case for kv_v2_delete

        """
        pass

    def test_kv_v2_delete_metadata_and_all_versions(self) -> None:
        """Test case for kv_v2_delete_metadata_and_all_versions

        """
        pass

    def test_kv_v2_delete_versions(self) -> None:
        """Test case for kv_v2_delete_versions

        """
        pass

    def test_kv_v2_destroy_versions(self) -> None:
        """Test case for kv_v2_destroy_versions

        """
        pass

    def test_kv_v2_list(self) -> None:
        """Test case for kv_v2_list

        """
        pass

    def test_kv_v2_read(self) -> None:
        """Test case for kv_v2_read

        """
        pass

    def test_kv_v2_read_configuration(self) -> None:
        """Test case for kv_v2_read_configuration

        Read the backend level settings.
        """
        pass

    def test_kv_v2_read_metadata(self) -> None:
        """Test case for kv_v2_read_metadata

        """
        pass

    def test_kv_v2_read_subkeys(self) -> None:
        """Test case for kv_v2_read_subkeys

        """
        pass

    def test_kv_v2_undelete_versions(self) -> None:
        """Test case for kv_v2_undelete_versions

        """
        pass

    def test_kv_v2_write(self) -> None:
        """Test case for kv_v2_write

        """
        pass

    def test_kv_v2_write_metadata(self) -> None:
        """Test case for kv_v2_write_metadata

        """
        pass

    def test_ldap_configure(self) -> None:
        """Test case for ldap_configure

        """
        pass

    def test_ldap_delete_configuration(self) -> None:
        """Test case for ldap_delete_configuration

        """
        pass

    def test_ldap_delete_dynamic_role(self) -> None:
        """Test case for ldap_delete_dynamic_role

        """
        pass

    def test_ldap_delete_static_role(self) -> None:
        """Test case for ldap_delete_static_role

        """
        pass

    def test_ldap_library_check_in(self) -> None:
        """Test case for ldap_library_check_in

        Check service accounts in to the library.
        """
        pass

    def test_ldap_library_check_out(self) -> None:
        """Test case for ldap_library_check_out

        Check a service account out from the library.
        """
        pass

    def test_ldap_library_check_status(self) -> None:
        """Test case for ldap_library_check_status

        Check the status of the service accounts in a library set.
        """
        pass

    def test_ldap_library_configure(self) -> None:
        """Test case for ldap_library_configure

        Update a library set.
        """
        pass

    def test_ldap_library_delete(self) -> None:
        """Test case for ldap_library_delete

        Delete a library set.
        """
        pass

    def test_ldap_library_force_check_in(self) -> None:
        """Test case for ldap_library_force_check_in

        Check service accounts in to the library.
        """
        pass

    def test_ldap_library_list(self) -> None:
        """Test case for ldap_library_list

        """
        pass

    def test_ldap_library_read(self) -> None:
        """Test case for ldap_library_read

        Read a library set.
        """
        pass

    def test_ldap_list_dynamic_roles(self) -> None:
        """Test case for ldap_list_dynamic_roles

        """
        pass

    def test_ldap_list_static_roles(self) -> None:
        """Test case for ldap_list_static_roles

        """
        pass

    def test_ldap_read_configuration(self) -> None:
        """Test case for ldap_read_configuration

        """
        pass

    def test_ldap_read_dynamic_role(self) -> None:
        """Test case for ldap_read_dynamic_role

        """
        pass

    def test_ldap_read_static_role(self) -> None:
        """Test case for ldap_read_static_role

        """
        pass

    def test_ldap_request_dynamic_role_credentials(self) -> None:
        """Test case for ldap_request_dynamic_role_credentials

        """
        pass

    def test_ldap_request_static_role_credentials(self) -> None:
        """Test case for ldap_request_static_role_credentials

        """
        pass

    def test_ldap_rotate_root_credentials(self) -> None:
        """Test case for ldap_rotate_root_credentials

        """
        pass

    def test_ldap_rotate_static_role(self) -> None:
        """Test case for ldap_rotate_static_role

        """
        pass

    def test_ldap_write_dynamic_role(self) -> None:
        """Test case for ldap_write_dynamic_role

        """
        pass

    def test_ldap_write_static_role(self) -> None:
        """Test case for ldap_write_static_role

        """
        pass

    def test_mongo_db_atlas_configure(self) -> None:
        """Test case for mongo_db_atlas_configure

        """
        pass

    def test_mongo_db_atlas_delete_role(self) -> None:
        """Test case for mongo_db_atlas_delete_role

        Manage the roles used to generate MongoDB Atlas Programmatic API Keys.
        """
        pass

    def test_mongo_db_atlas_generate_credentials(self) -> None:
        """Test case for mongo_db_atlas_generate_credentials

        """
        pass

    def test_mongo_db_atlas_generate_credentials2(self) -> None:
        """Test case for mongo_db_atlas_generate_credentials2

        """
        pass

    def test_mongo_db_atlas_list_roles(self) -> None:
        """Test case for mongo_db_atlas_list_roles

        List the existing roles in this backend
        """
        pass

    def test_mongo_db_atlas_read_configuration(self) -> None:
        """Test case for mongo_db_atlas_read_configuration

        """
        pass

    def test_mongo_db_atlas_read_role(self) -> None:
        """Test case for mongo_db_atlas_read_role

        Manage the roles used to generate MongoDB Atlas Programmatic API Keys.
        """
        pass

    def test_mongo_db_atlas_write_role(self) -> None:
        """Test case for mongo_db_atlas_write_role

        Manage the roles used to generate MongoDB Atlas Programmatic API Keys.
        """
        pass

    def test_nomad_configure_access(self) -> None:
        """Test case for nomad_configure_access

        """
        pass

    def test_nomad_configure_lease(self) -> None:
        """Test case for nomad_configure_lease

        """
        pass

    def test_nomad_delete_access_configuration(self) -> None:
        """Test case for nomad_delete_access_configuration

        """
        pass

    def test_nomad_delete_lease_configuration(self) -> None:
        """Test case for nomad_delete_lease_configuration

        """
        pass

    def test_nomad_delete_role(self) -> None:
        """Test case for nomad_delete_role

        """
        pass

    def test_nomad_generate_credentials(self) -> None:
        """Test case for nomad_generate_credentials

        """
        pass

    def test_nomad_list_roles(self) -> None:
        """Test case for nomad_list_roles

        """
        pass

    def test_nomad_read_access_configuration(self) -> None:
        """Test case for nomad_read_access_configuration

        """
        pass

    def test_nomad_read_lease_configuration(self) -> None:
        """Test case for nomad_read_lease_configuration

        """
        pass

    def test_nomad_read_role(self) -> None:
        """Test case for nomad_read_role

        """
        pass

    def test_nomad_write_role(self) -> None:
        """Test case for nomad_write_role

        """
        pass

    def test_pki_configure_acme(self) -> None:
        """Test case for pki_configure_acme

        """
        pass

    def test_pki_configure_auto_tidy(self) -> None:
        """Test case for pki_configure_auto_tidy

        """
        pass

    def test_pki_configure_ca(self) -> None:
        """Test case for pki_configure_ca

        """
        pass

    def test_pki_configure_cluster(self) -> None:
        """Test case for pki_configure_cluster

        """
        pass

    def test_pki_configure_crl(self) -> None:
        """Test case for pki_configure_crl

        """
        pass

    def test_pki_configure_issuers(self) -> None:
        """Test case for pki_configure_issuers

        """
        pass

    def test_pki_configure_keys(self) -> None:
        """Test case for pki_configure_keys

        """
        pass

    def test_pki_configure_urls(self) -> None:
        """Test case for pki_configure_urls

        """
        pass

    def test_pki_cross_sign_intermediate(self) -> None:
        """Test case for pki_cross_sign_intermediate

        """
        pass

    def test_pki_delete_eab_key(self) -> None:
        """Test case for pki_delete_eab_key

        """
        pass

    def test_pki_delete_issuer(self) -> None:
        """Test case for pki_delete_issuer

        """
        pass

    def test_pki_delete_key(self) -> None:
        """Test case for pki_delete_key

        """
        pass

    def test_pki_delete_role(self) -> None:
        """Test case for pki_delete_role

        """
        pass

    def test_pki_delete_root(self) -> None:
        """Test case for pki_delete_root

        """
        pass

    def test_pki_generate_eab_key(self) -> None:
        """Test case for pki_generate_eab_key

        """
        pass

    def test_pki_generate_eab_key_for_issuer(self) -> None:
        """Test case for pki_generate_eab_key_for_issuer

        """
        pass

    def test_pki_generate_eab_key_for_issuer_and_role(self) -> None:
        """Test case for pki_generate_eab_key_for_issuer_and_role

        """
        pass

    def test_pki_generate_eab_key_for_role(self) -> None:
        """Test case for pki_generate_eab_key_for_role

        """
        pass

    def test_pki_generate_exported_key(self) -> None:
        """Test case for pki_generate_exported_key

        """
        pass

    def test_pki_generate_intermediate(self) -> None:
        """Test case for pki_generate_intermediate

        """
        pass

    def test_pki_generate_internal_key(self) -> None:
        """Test case for pki_generate_internal_key

        """
        pass

    def test_pki_generate_kms_key(self) -> None:
        """Test case for pki_generate_kms_key

        """
        pass

    def test_pki_generate_root(self) -> None:
        """Test case for pki_generate_root

        """
        pass

    def test_pki_import_key(self) -> None:
        """Test case for pki_import_key

        """
        pass

    def test_pki_issue_with_role(self) -> None:
        """Test case for pki_issue_with_role

        """
        pass

    def test_pki_issuer_issue_with_role(self) -> None:
        """Test case for pki_issuer_issue_with_role

        """
        pass

    def test_pki_issuer_read_crl(self) -> None:
        """Test case for pki_issuer_read_crl

        """
        pass

    def test_pki_issuer_read_crl_delta(self) -> None:
        """Test case for pki_issuer_read_crl_delta

        """
        pass

    def test_pki_issuer_read_crl_delta_der(self) -> None:
        """Test case for pki_issuer_read_crl_delta_der

        """
        pass

    def test_pki_issuer_read_crl_delta_pem(self) -> None:
        """Test case for pki_issuer_read_crl_delta_pem

        """
        pass

    def test_pki_issuer_read_crl_der(self) -> None:
        """Test case for pki_issuer_read_crl_der

        """
        pass

    def test_pki_issuer_read_crl_pem(self) -> None:
        """Test case for pki_issuer_read_crl_pem

        """
        pass

    def test_pki_issuer_resign_crls(self) -> None:
        """Test case for pki_issuer_resign_crls

        """
        pass

    def test_pki_issuer_sign_intermediate(self) -> None:
        """Test case for pki_issuer_sign_intermediate

        """
        pass

    def test_pki_issuer_sign_revocation_list(self) -> None:
        """Test case for pki_issuer_sign_revocation_list

        """
        pass

    def test_pki_issuer_sign_self_issued(self) -> None:
        """Test case for pki_issuer_sign_self_issued

        """
        pass

    def test_pki_issuer_sign_verbatim(self) -> None:
        """Test case for pki_issuer_sign_verbatim

        """
        pass

    def test_pki_issuer_sign_verbatim_with_role(self) -> None:
        """Test case for pki_issuer_sign_verbatim_with_role

        """
        pass

    def test_pki_issuer_sign_with_role(self) -> None:
        """Test case for pki_issuer_sign_with_role

        """
        pass

    def test_pki_issuers_generate_intermediate(self) -> None:
        """Test case for pki_issuers_generate_intermediate

        """
        pass

    def test_pki_issuers_generate_root(self) -> None:
        """Test case for pki_issuers_generate_root

        """
        pass

    def test_pki_issuers_import_bundle(self) -> None:
        """Test case for pki_issuers_import_bundle

        """
        pass

    def test_pki_issuers_import_cert(self) -> None:
        """Test case for pki_issuers_import_cert

        """
        pass

    def test_pki_list_certs(self) -> None:
        """Test case for pki_list_certs

        """
        pass

    def test_pki_list_eab_keys(self) -> None:
        """Test case for pki_list_eab_keys

        """
        pass

    def test_pki_list_issuers(self) -> None:
        """Test case for pki_list_issuers

        """
        pass

    def test_pki_list_keys(self) -> None:
        """Test case for pki_list_keys

        """
        pass

    def test_pki_list_revoked_certs(self) -> None:
        """Test case for pki_list_revoked_certs

        """
        pass

    def test_pki_list_roles(self) -> None:
        """Test case for pki_list_roles

        """
        pass

    def test_pki_query_ocsp(self) -> None:
        """Test case for pki_query_ocsp

        """
        pass

    def test_pki_query_ocsp_with_get_req(self) -> None:
        """Test case for pki_query_ocsp_with_get_req

        """
        pass

    def test_pki_read_acme_configuration(self) -> None:
        """Test case for pki_read_acme_configuration

        """
        pass

    def test_pki_read_acme_directory(self) -> None:
        """Test case for pki_read_acme_directory

        """
        pass

    def test_pki_read_acme_new_nonce(self) -> None:
        """Test case for pki_read_acme_new_nonce

        """
        pass

    def test_pki_read_auto_tidy_configuration(self) -> None:
        """Test case for pki_read_auto_tidy_configuration

        """
        pass

    def test_pki_read_ca_chain_pem(self) -> None:
        """Test case for pki_read_ca_chain_pem

        """
        pass

    def test_pki_read_ca_der(self) -> None:
        """Test case for pki_read_ca_der

        """
        pass

    def test_pki_read_ca_pem(self) -> None:
        """Test case for pki_read_ca_pem

        """
        pass

    def test_pki_read_cert(self) -> None:
        """Test case for pki_read_cert

        """
        pass

    def test_pki_read_cert_ca_chain(self) -> None:
        """Test case for pki_read_cert_ca_chain

        """
        pass

    def test_pki_read_cert_crl(self) -> None:
        """Test case for pki_read_cert_crl

        """
        pass

    def test_pki_read_cert_delta_crl(self) -> None:
        """Test case for pki_read_cert_delta_crl

        """
        pass

    def test_pki_read_cert_raw_der(self) -> None:
        """Test case for pki_read_cert_raw_der

        """
        pass

    def test_pki_read_cert_raw_pem(self) -> None:
        """Test case for pki_read_cert_raw_pem

        """
        pass

    def test_pki_read_cluster_configuration(self) -> None:
        """Test case for pki_read_cluster_configuration

        """
        pass

    def test_pki_read_crl_configuration(self) -> None:
        """Test case for pki_read_crl_configuration

        """
        pass

    def test_pki_read_crl_delta(self) -> None:
        """Test case for pki_read_crl_delta

        """
        pass

    def test_pki_read_crl_delta_pem(self) -> None:
        """Test case for pki_read_crl_delta_pem

        """
        pass

    def test_pki_read_crl_der(self) -> None:
        """Test case for pki_read_crl_der

        """
        pass

    def test_pki_read_crl_pem(self) -> None:
        """Test case for pki_read_crl_pem

        """
        pass

    def test_pki_read_issuer(self) -> None:
        """Test case for pki_read_issuer

        """
        pass

    def test_pki_read_issuer_der(self) -> None:
        """Test case for pki_read_issuer_der

        """
        pass

    def test_pki_read_issuer_issuer_ref_acme_directory(self) -> None:
        """Test case for pki_read_issuer_issuer_ref_acme_directory

        """
        pass

    def test_pki_read_issuer_issuer_ref_acme_new_nonce(self) -> None:
        """Test case for pki_read_issuer_issuer_ref_acme_new_nonce

        """
        pass

    def test_pki_read_issuer_issuer_ref_roles_role_acme_directory(self) -> None:
        """Test case for pki_read_issuer_issuer_ref_roles_role_acme_directory

        """
        pass

    def test_pki_read_issuer_issuer_ref_roles_role_acme_new_nonce(self) -> None:
        """Test case for pki_read_issuer_issuer_ref_roles_role_acme_new_nonce

        """
        pass

    def test_pki_read_issuer_json(self) -> None:
        """Test case for pki_read_issuer_json

        """
        pass

    def test_pki_read_issuer_pem(self) -> None:
        """Test case for pki_read_issuer_pem

        """
        pass

    def test_pki_read_issuers_configuration(self) -> None:
        """Test case for pki_read_issuers_configuration

        """
        pass

    def test_pki_read_key(self) -> None:
        """Test case for pki_read_key

        """
        pass

    def test_pki_read_keys_configuration(self) -> None:
        """Test case for pki_read_keys_configuration

        """
        pass

    def test_pki_read_role(self) -> None:
        """Test case for pki_read_role

        """
        pass

    def test_pki_read_roles_role_acme_directory(self) -> None:
        """Test case for pki_read_roles_role_acme_directory

        """
        pass

    def test_pki_read_roles_role_acme_new_nonce(self) -> None:
        """Test case for pki_read_roles_role_acme_new_nonce

        """
        pass

    def test_pki_read_urls_configuration(self) -> None:
        """Test case for pki_read_urls_configuration

        """
        pass

    def test_pki_replace_root(self) -> None:
        """Test case for pki_replace_root

        """
        pass

    def test_pki_revoke(self) -> None:
        """Test case for pki_revoke

        """
        pass

    def test_pki_revoke_issuer(self) -> None:
        """Test case for pki_revoke_issuer

        """
        pass

    def test_pki_revoke_with_key(self) -> None:
        """Test case for pki_revoke_with_key

        """
        pass

    def test_pki_root_sign_intermediate(self) -> None:
        """Test case for pki_root_sign_intermediate

        """
        pass

    def test_pki_root_sign_self_issued(self) -> None:
        """Test case for pki_root_sign_self_issued

        """
        pass

    def test_pki_rotate_crl(self) -> None:
        """Test case for pki_rotate_crl

        """
        pass

    def test_pki_rotate_delta_crl(self) -> None:
        """Test case for pki_rotate_delta_crl

        """
        pass

    def test_pki_rotate_root(self) -> None:
        """Test case for pki_rotate_root

        """
        pass

    def test_pki_set_signed_intermediate(self) -> None:
        """Test case for pki_set_signed_intermediate

        """
        pass

    def test_pki_sign_verbatim(self) -> None:
        """Test case for pki_sign_verbatim

        """
        pass

    def test_pki_sign_verbatim_with_role(self) -> None:
        """Test case for pki_sign_verbatim_with_role

        """
        pass

    def test_pki_sign_with_role(self) -> None:
        """Test case for pki_sign_with_role

        """
        pass

    def test_pki_tidy(self) -> None:
        """Test case for pki_tidy

        """
        pass

    def test_pki_tidy_cancel(self) -> None:
        """Test case for pki_tidy_cancel

        """
        pass

    def test_pki_tidy_status(self) -> None:
        """Test case for pki_tidy_status

        """
        pass

    def test_pki_write_acme_account_kid(self) -> None:
        """Test case for pki_write_acme_account_kid

        """
        pass

    def test_pki_write_acme_authorization_auth_id(self) -> None:
        """Test case for pki_write_acme_authorization_auth_id

        """
        pass

    def test_pki_write_acme_challenge_auth_id_challenge_type(self) -> None:
        """Test case for pki_write_acme_challenge_auth_id_challenge_type

        """
        pass

    def test_pki_write_acme_new_account(self) -> None:
        """Test case for pki_write_acme_new_account

        """
        pass

    def test_pki_write_acme_new_order(self) -> None:
        """Test case for pki_write_acme_new_order

        """
        pass

    def test_pki_write_acme_order_order_id(self) -> None:
        """Test case for pki_write_acme_order_order_id

        """
        pass

    def test_pki_write_acme_order_order_id_cert(self) -> None:
        """Test case for pki_write_acme_order_order_id_cert

        """
        pass

    def test_pki_write_acme_order_order_id_finalize(self) -> None:
        """Test case for pki_write_acme_order_order_id_finalize

        """
        pass

    def test_pki_write_acme_orders(self) -> None:
        """Test case for pki_write_acme_orders

        """
        pass

    def test_pki_write_acme_revoke_cert(self) -> None:
        """Test case for pki_write_acme_revoke_cert

        """
        pass

    def test_pki_write_issuer(self) -> None:
        """Test case for pki_write_issuer

        """
        pass

    def test_pki_write_issuer_issuer_ref_acme_account_kid(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_acme_account_kid

        """
        pass

    def test_pki_write_issuer_issuer_ref_acme_authorization_auth_id(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_acme_authorization_auth_id

        """
        pass

    def test_pki_write_issuer_issuer_ref_acme_challenge_auth_id_challenge_type(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_acme_challenge_auth_id_challenge_type

        """
        pass

    def test_pki_write_issuer_issuer_ref_acme_new_account(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_acme_new_account

        """
        pass

    def test_pki_write_issuer_issuer_ref_acme_new_order(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_acme_new_order

        """
        pass

    def test_pki_write_issuer_issuer_ref_acme_order_order_id(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_acme_order_order_id

        """
        pass

    def test_pki_write_issuer_issuer_ref_acme_order_order_id_cert(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_acme_order_order_id_cert

        """
        pass

    def test_pki_write_issuer_issuer_ref_acme_order_order_id_finalize(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_acme_order_order_id_finalize

        """
        pass

    def test_pki_write_issuer_issuer_ref_acme_orders(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_acme_orders

        """
        pass

    def test_pki_write_issuer_issuer_ref_acme_revoke_cert(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_acme_revoke_cert

        """
        pass

    def test_pki_write_issuer_issuer_ref_roles_role_acme_account_kid(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_roles_role_acme_account_kid

        """
        pass

    def test_pki_write_issuer_issuer_ref_roles_role_acme_authorization_auth_id(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_roles_role_acme_authorization_auth_id

        """
        pass

    def test_pki_write_issuer_issuer_ref_roles_role_acme_challenge_auth_id_challenge_type(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_roles_role_acme_challenge_auth_id_challenge_type

        """
        pass

    def test_pki_write_issuer_issuer_ref_roles_role_acme_new_account(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_roles_role_acme_new_account

        """
        pass

    def test_pki_write_issuer_issuer_ref_roles_role_acme_new_order(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_roles_role_acme_new_order

        """
        pass

    def test_pki_write_issuer_issuer_ref_roles_role_acme_order_order_id(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_roles_role_acme_order_order_id

        """
        pass

    def test_pki_write_issuer_issuer_ref_roles_role_acme_order_order_id_cert(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_roles_role_acme_order_order_id_cert

        """
        pass

    def test_pki_write_issuer_issuer_ref_roles_role_acme_order_order_id_finalize(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_roles_role_acme_order_order_id_finalize

        """
        pass

    def test_pki_write_issuer_issuer_ref_roles_role_acme_orders(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_roles_role_acme_orders

        """
        pass

    def test_pki_write_issuer_issuer_ref_roles_role_acme_revoke_cert(self) -> None:
        """Test case for pki_write_issuer_issuer_ref_roles_role_acme_revoke_cert

        """
        pass

    def test_pki_write_key(self) -> None:
        """Test case for pki_write_key

        """
        pass

    def test_pki_write_role(self) -> None:
        """Test case for pki_write_role

        """
        pass

    def test_pki_write_roles_role_acme_account_kid(self) -> None:
        """Test case for pki_write_roles_role_acme_account_kid

        """
        pass

    def test_pki_write_roles_role_acme_authorization_auth_id(self) -> None:
        """Test case for pki_write_roles_role_acme_authorization_auth_id

        """
        pass

    def test_pki_write_roles_role_acme_challenge_auth_id_challenge_type(self) -> None:
        """Test case for pki_write_roles_role_acme_challenge_auth_id_challenge_type

        """
        pass

    def test_pki_write_roles_role_acme_new_account(self) -> None:
        """Test case for pki_write_roles_role_acme_new_account

        """
        pass

    def test_pki_write_roles_role_acme_new_order(self) -> None:
        """Test case for pki_write_roles_role_acme_new_order

        """
        pass

    def test_pki_write_roles_role_acme_order_order_id(self) -> None:
        """Test case for pki_write_roles_role_acme_order_order_id

        """
        pass

    def test_pki_write_roles_role_acme_order_order_id_cert(self) -> None:
        """Test case for pki_write_roles_role_acme_order_order_id_cert

        """
        pass

    def test_pki_write_roles_role_acme_order_order_id_finalize(self) -> None:
        """Test case for pki_write_roles_role_acme_order_order_id_finalize

        """
        pass

    def test_pki_write_roles_role_acme_orders(self) -> None:
        """Test case for pki_write_roles_role_acme_orders

        """
        pass

    def test_pki_write_roles_role_acme_revoke_cert(self) -> None:
        """Test case for pki_write_roles_role_acme_revoke_cert

        """
        pass

    def test_rabbit_mq_configure_connection(self) -> None:
        """Test case for rabbit_mq_configure_connection

        Configure the connection URI, username, and password to talk to RabbitMQ management HTTP API.
        """
        pass

    def test_rabbit_mq_configure_lease(self) -> None:
        """Test case for rabbit_mq_configure_lease

        """
        pass

    def test_rabbit_mq_delete_role(self) -> None:
        """Test case for rabbit_mq_delete_role

        Manage the roles that can be created with this backend.
        """
        pass

    def test_rabbit_mq_list_roles(self) -> None:
        """Test case for rabbit_mq_list_roles

        Manage the roles that can be created with this backend.
        """
        pass

    def test_rabbit_mq_read_lease_configuration(self) -> None:
        """Test case for rabbit_mq_read_lease_configuration

        """
        pass

    def test_rabbit_mq_read_role(self) -> None:
        """Test case for rabbit_mq_read_role

        Manage the roles that can be created with this backend.
        """
        pass

    def test_rabbit_mq_request_credentials(self) -> None:
        """Test case for rabbit_mq_request_credentials

        Request RabbitMQ credentials for a certain role.
        """
        pass

    def test_rabbit_mq_write_role(self) -> None:
        """Test case for rabbit_mq_write_role

        Manage the roles that can be created with this backend.
        """
        pass

    def test_ssh_configure_ca(self) -> None:
        """Test case for ssh_configure_ca

        """
        pass

    def test_ssh_configure_zero_address(self) -> None:
        """Test case for ssh_configure_zero_address

        """
        pass

    def test_ssh_delete_ca_configuration(self) -> None:
        """Test case for ssh_delete_ca_configuration

        """
        pass

    def test_ssh_delete_role(self) -> None:
        """Test case for ssh_delete_role

        Manage the 'roles' that can be created with this backend.
        """
        pass

    def test_ssh_delete_zero_address_configuration(self) -> None:
        """Test case for ssh_delete_zero_address_configuration

        """
        pass

    def test_ssh_generate_credentials(self) -> None:
        """Test case for ssh_generate_credentials

        Creates a credential for establishing SSH connection with the remote host.
        """
        pass

    def test_ssh_issue_certificate(self) -> None:
        """Test case for ssh_issue_certificate

        """
        pass

    def test_ssh_list_roles(self) -> None:
        """Test case for ssh_list_roles

        Manage the 'roles' that can be created with this backend.
        """
        pass

    def test_ssh_list_roles_by_ip(self) -> None:
        """Test case for ssh_list_roles_by_ip

        List all the roles associated with the given IP address.
        """
        pass

    def test_ssh_read_ca_configuration(self) -> None:
        """Test case for ssh_read_ca_configuration

        """
        pass

    def test_ssh_read_public_key(self) -> None:
        """Test case for ssh_read_public_key

        Retrieve the public key.
        """
        pass

    def test_ssh_read_role(self) -> None:
        """Test case for ssh_read_role

        Manage the 'roles' that can be created with this backend.
        """
        pass

    def test_ssh_read_zero_address_configuration(self) -> None:
        """Test case for ssh_read_zero_address_configuration

        """
        pass

    def test_ssh_sign_certificate(self) -> None:
        """Test case for ssh_sign_certificate

        Request signing an SSH key using a certain role with the provided details.
        """
        pass

    def test_ssh_tidy_dynamic_host_keys(self) -> None:
        """Test case for ssh_tidy_dynamic_host_keys

        This endpoint removes the stored host keys used for the removed Dynamic Key feature, if present.
        """
        pass

    def test_ssh_verify_otp(self) -> None:
        """Test case for ssh_verify_otp

        Validate the OTP provided by Vault SSH Agent.
        """
        pass

    def test_ssh_write_role(self) -> None:
        """Test case for ssh_write_role

        Manage the 'roles' that can be created with this backend.
        """
        pass

    def test_terraform_cloud_configure(self) -> None:
        """Test case for terraform_cloud_configure

        """
        pass

    def test_terraform_cloud_delete_configuration(self) -> None:
        """Test case for terraform_cloud_delete_configuration

        """
        pass

    def test_terraform_cloud_delete_role(self) -> None:
        """Test case for terraform_cloud_delete_role

        """
        pass

    def test_terraform_cloud_generate_credentials(self) -> None:
        """Test case for terraform_cloud_generate_credentials

        """
        pass

    def test_terraform_cloud_generate_credentials2(self) -> None:
        """Test case for terraform_cloud_generate_credentials2

        """
        pass

    def test_terraform_cloud_list_roles(self) -> None:
        """Test case for terraform_cloud_list_roles

        """
        pass

    def test_terraform_cloud_read_configuration(self) -> None:
        """Test case for terraform_cloud_read_configuration

        """
        pass

    def test_terraform_cloud_read_role(self) -> None:
        """Test case for terraform_cloud_read_role

        """
        pass

    def test_terraform_cloud_rotate_role(self) -> None:
        """Test case for terraform_cloud_rotate_role

        """
        pass

    def test_terraform_cloud_write_role(self) -> None:
        """Test case for terraform_cloud_write_role

        """
        pass

    def test_totp_create_key(self) -> None:
        """Test case for totp_create_key

        """
        pass

    def test_totp_delete_key(self) -> None:
        """Test case for totp_delete_key

        """
        pass

    def test_totp_generate_code(self) -> None:
        """Test case for totp_generate_code

        """
        pass

    def test_totp_list_keys(self) -> None:
        """Test case for totp_list_keys

        Manage the keys that can be created with this backend.
        """
        pass

    def test_totp_read_key(self) -> None:
        """Test case for totp_read_key

        """
        pass

    def test_totp_validate_code(self) -> None:
        """Test case for totp_validate_code

        """
        pass

    def test_transit_back_up_key(self) -> None:
        """Test case for transit_back_up_key

        Backup the named key
        """
        pass

    def test_transit_byok_key(self) -> None:
        """Test case for transit_byok_key

        Securely export named encryption or signing key
        """
        pass

    def test_transit_byok_key_version(self) -> None:
        """Test case for transit_byok_key_version

        Securely export named encryption or signing key
        """
        pass

    def test_transit_configure_cache(self) -> None:
        """Test case for transit_configure_cache

        Configures a new cache of the specified size
        """
        pass

    def test_transit_configure_key(self) -> None:
        """Test case for transit_configure_key

        Configure a named encryption key
        """
        pass

    def test_transit_configure_keys(self) -> None:
        """Test case for transit_configure_keys

        """
        pass

    def test_transit_create_key(self) -> None:
        """Test case for transit_create_key

        """
        pass

    def test_transit_decrypt(self) -> None:
        """Test case for transit_decrypt

        Decrypt a ciphertext value using a named key
        """
        pass

    def test_transit_delete_key(self) -> None:
        """Test case for transit_delete_key

        """
        pass

    def test_transit_encrypt(self) -> None:
        """Test case for transit_encrypt

        Encrypt a plaintext value or a batch of plaintext blocks using a named key
        """
        pass

    def test_transit_export_key(self) -> None:
        """Test case for transit_export_key

        Export named encryption or signing key
        """
        pass

    def test_transit_export_key_version(self) -> None:
        """Test case for transit_export_key_version

        Export named encryption or signing key
        """
        pass

    def test_transit_generate_csr_for_key(self) -> None:
        """Test case for transit_generate_csr_for_key

        """
        pass

    def test_transit_generate_data_key(self) -> None:
        """Test case for transit_generate_data_key

        Generate a data key
        """
        pass

    def test_transit_generate_hmac(self) -> None:
        """Test case for transit_generate_hmac

        Generate an HMAC for input data using the named key
        """
        pass

    def test_transit_generate_hmac_with_algorithm(self) -> None:
        """Test case for transit_generate_hmac_with_algorithm

        Generate an HMAC for input data using the named key
        """
        pass

    def test_transit_generate_random(self) -> None:
        """Test case for transit_generate_random

        Generate random bytes
        """
        pass

    def test_transit_generate_random_with_bytes(self) -> None:
        """Test case for transit_generate_random_with_bytes

        Generate random bytes
        """
        pass

    def test_transit_generate_random_with_source(self) -> None:
        """Test case for transit_generate_random_with_source

        Generate random bytes
        """
        pass

    def test_transit_generate_random_with_source_and_bytes(self) -> None:
        """Test case for transit_generate_random_with_source_and_bytes

        Generate random bytes
        """
        pass

    def test_transit_hash(self) -> None:
        """Test case for transit_hash

        Generate a hash sum for input data
        """
        pass

    def test_transit_hash_with_algorithm(self) -> None:
        """Test case for transit_hash_with_algorithm

        Generate a hash sum for input data
        """
        pass

    def test_transit_import_key(self) -> None:
        """Test case for transit_import_key

        Imports an externally-generated key into a new transit key
        """
        pass

    def test_transit_import_key_version(self) -> None:
        """Test case for transit_import_key_version

        Imports an externally-generated key into an existing imported key
        """
        pass

    def test_transit_list_keys(self) -> None:
        """Test case for transit_list_keys

        Managed named encryption keys
        """
        pass

    def test_transit_read_cache_configuration(self) -> None:
        """Test case for transit_read_cache_configuration

        Returns the size of the active cache
        """
        pass

    def test_transit_read_key(self) -> None:
        """Test case for transit_read_key

        """
        pass

    def test_transit_read_keys_configuration(self) -> None:
        """Test case for transit_read_keys_configuration

        """
        pass

    def test_transit_read_wrapping_key(self) -> None:
        """Test case for transit_read_wrapping_key

        Returns the public key to use for wrapping imported keys
        """
        pass

    def test_transit_restore_and_rename_key(self) -> None:
        """Test case for transit_restore_and_rename_key

        Restore the named key
        """
        pass

    def test_transit_restore_key(self) -> None:
        """Test case for transit_restore_key

        Restore the named key
        """
        pass

    def test_transit_rewrap(self) -> None:
        """Test case for transit_rewrap

        Rewrap ciphertext
        """
        pass

    def test_transit_rotate_key(self) -> None:
        """Test case for transit_rotate_key

        Rotate named encryption key
        """
        pass

    def test_transit_set_certificate_for_key(self) -> None:
        """Test case for transit_set_certificate_for_key

        """
        pass

    def test_transit_sign(self) -> None:
        """Test case for transit_sign

        Generate a signature for input data using the named key
        """
        pass

    def test_transit_sign_with_algorithm(self) -> None:
        """Test case for transit_sign_with_algorithm

        Generate a signature for input data using the named key
        """
        pass

    def test_transit_trim_key(self) -> None:
        """Test case for transit_trim_key

        Trim key versions of a named key
        """
        pass

    def test_transit_verify(self) -> None:
        """Test case for transit_verify

        Verify a signature or HMAC for input data created using the named key
        """
        pass

    def test_transit_verify_with_algorithm(self) -> None:
        """Test case for transit_verify_with_algorithm

        Verify a signature or HMAC for input data created using the named key
        """
        pass


if __name__ == '__main__':
    unittest.main()
